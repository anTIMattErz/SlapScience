
"""
Script to scrape artists urls from all charts page on SoundCloud.
Cycle through all combinations of country and genre, for top50 and new.
The data pulled is going to be a catalogue of artists we are going to find
urls for and pull streaming data for. 
This will include data for artist, track url and name. Keeping only distincts
"""

packages = open("packages.py", 'r').read()
exec(packages)

url = 'https://soundcloud.com/charts/top?genre=classical&country=AU'

attributes = re.split('https://soundcloud.com/charts/', url)[1]

url_type = re.split('\?genre=', attributes)[0]

split1 = re.split('\?genre=', attributes)[1]
 
split2 = re.split('&country=', split1)

genre = split2[0]

country = split2[1]

print(url_type, genre, country)

# =============================================================================
# #==============================================================================
# #charts will be new and top and for each available country and genre
# api_types = ["top", "new"]
# 
# countries = ['AU', 'CA', 'FR', 
#              'DE', 'IE', 'NL', 
#              'NZ', 'GB', 'US', 
#              'all-countries']
# 
# genres = ['alternativerock', 'ambient', 'classical',
#               'country', 'danceedm', 'dancehall',
#               'deephouse', 'disco', 'drumbass',
#               'dubstep', 'electronic','folksingersongwriter',
#               'all-music', 'all-audio']
# 			  
# #generate all combinations of api type, genre, and country
# api_genre_country_combos = list(product(api_types, genres, countries))
# 
# #==============================================================================
# 
# current_catalogue = Catalogue(pd.read_csv(catalogue_name, index_col = 0))
# 
# max_run_id, next_run_id = Catalogue.run_id_gen(current_catalogue)
# 
# appended_data = Catalogue()
# 
# # Loop through all combinations and append the data
# for api_type, genre, country in api_genre_country_combos:
#     chart_url = Sc_scraper("charts", api_type, genre, country)
#     data = Catalogue(Sc_scraper.chart_scraper(chart_url, next_run_id))
#     
#     appended_data = Catalogue.union_catalogue(appended_data, data)
# 
# 
# # reset index and rename indez
# appended_data = Catalogue.rename_index(appended_data, 'chart_num')
# appended_data = Catalogue.re_index_catalogue(appended_data)
# 
# new_data = Catalogue.union_catalogue(current_catalogue, appended_data)
# new_data = Catalogue.re_index_catalogue(new_data, 'drop index')
# 
# Catalogue.save_data(new_data, 'pipe_line_file.csv')
# =============================================================================
